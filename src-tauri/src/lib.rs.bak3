mod player_fixed;
mod player_thread;

use player_fixed::{PlayMode, PlayerCommand, PlayerEvent, PlayerState, SongInfo};
use player_thread::AudioPlayer;
use std::path::PathBuf;
use std::sync::Arc;
use tauri::{Emitter, Manager};
use tokio::sync::mpsc;
use tokio::sync::Mutex as AsyncMutex;

/// 状态管理器
struct MusicPlayerState {
    player: Arc<AudioPlayer>,
    event_receiver: mpsc::Receiver<PlayerEvent>,
}

/// Tauri 状态
#[derive(Default)]
struct AppState {
    player: Option<Arc<AsyncMutex<MusicPlayerState>>>,
} n
// 初始化播放器
// 初始化播放器
#[tauri::command]
async fn init_player(
    app_handle: tauri::AppHandle,
    state: tauri::State<'_, AsyncMutex<AppState>>,
) -> Result<(), String> {
}
